<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <SolidColorBrush x:Key="AppColor" Color="#fb7657"/>
    <SolidColorBrush x:Key="SecondAppColor" Color="#fb6161"/>

    <Color x:Key="AppColorVersion2">#fb7657</Color>
    <Color x:Key="SecondAppColorVersion2">#fb6161</Color>

    <SolidColorBrush x:Key="ForegroundAppColor" Color="White"/>
    <SolidColorBrush x:Key="SecondForegroundAppColor" Color="#121518"/>

    <SolidColorBrush x:Key="SearchBorderBrush" Color="#e0e6ed"/>
    <SolidColorBrush x:Key="SearchHoverBorderBrush" Color="#d9d9d9"/>

    <SolidColorBrush x:Key="DisableColor" Color="#eee"/>
    <SolidColorBrush x:Key="DisableButtonColor" Color="#D8D9CF"/>

    <SolidColorBrush x:Key="RootBorderBgColor" Color="#d7dbe2"/>

    <Style x:Key="MenuTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="40 15 0 15"/>
    </Style>

    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="15 0 15 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ForegroundAppColor}"/>
                <Setter Property="Foreground" Value="{StaticResource AppColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuButtonIcon" TargetType="ContentControl">
        <Setter Property="Margin" Value="20 0 0 0"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="MenuButtonText" TargetType="TextBlock">
        <Setter Property="Margin" Value="20 0 0 2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="WhiteBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Margin" Value="20 7 0 7"/>
    </Style>

    <Style x:Key="TitleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#083353"/>
    </Style>

    <!--#region TableView-->

    <Style x:Key="TextboxSearch" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="Foreground" Value="{StaticResource SecondForegroundAppColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="25 17"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            BorderThickness="1" BorderBrush="{StaticResource SearchBorderBrush}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SearchHoverBorderBrush}" TargetName="border"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SearchHoverBorderBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextboxFilter" TargetType="TextBox" BasedOn="{StaticResource TextboxSearch}">
        <Setter Property="Padding" Value="10 7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border x:Name="border" CornerRadius="7" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            BorderThickness="1" BorderBrush="{StaticResource SearchBorderBrush}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SearchHoverBorderBrush}" TargetName="border"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SearchHoverBorderBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AddButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AppColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 20 0 0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondAppColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SecondForegroundAppColor}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0 0 0 1" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AppColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisableColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{StaticResource SecondForegroundAppColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="PagingButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#6C7682" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="1 0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10 5">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#fb8757" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="GridEditButton" TargetType="Button">
        <Setter Property="Background" Value="#4dd171" />
        <Setter Property="BorderBrush" Value="#40c263" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5ae67f" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridRemoveButton" TargetType="Button" BasedOn="{StaticResource GridEditButton}">
        <Setter Property="Background" Value="#D32F2F" />
        <Setter Property="BorderBrush" Value="#B71C1C" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F44336" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region DataGrid Style-->

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="{StaticResource SecondForegroundAppColor}" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SecondForegroundAppColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Margin" Value="0 10 0 0" />
        <Setter Property="Grid.Row" Value="5" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="ColumnWidth" Value="*" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="15 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#69717D" />
        <Setter Property="Margin" Value="15 0 15 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </theme:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0 4 0 0" />
        <Setter Property="Background" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AppColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AppColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#dfdfdf"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Calendar-->

    <Style x:Key="CustomCalendarDayButton" TargetType="CalendarDayButton" BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
        <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource AppColor}" />
        <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{StaticResource ForegroundAppColor}" />
    </Style>

    <Style x:Key="CustomCalendarButton" TargetType="CalendarButton" BasedOn="{StaticResource MaterialDesignCalendarButton}">
        <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{StaticResource AppColor}" />
        <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{StaticResource ForegroundAppColor}" />
    </Style>

    <Style x:Key="CustomCalendar" TargetType="{x:Type Calendar}" BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
        <Setter Property="Background" Value="{StaticResource ForegroundAppColor}" />
        <Setter Property="Foreground" Value="{StaticResource AppColor}" />
        <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="{StaticResource AppColor}" />
        <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="{StaticResource ForegroundAppColor}" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
    </Style>

    <!--#endregion-->

    <!--#region AddItem Style-->

    <Style x:Key="InputTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="10"/>

        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1.1"/>
        <Setter Property="materialDesign:ValidationAssist.OnlyShowOnFocus" Value="True"/>
        <Setter Property="materialDesign:ValidationAssist.UsePopup" Value="True"/>
        <Setter Property="materialDesign:ValidationAssist.Background" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                <Setter Property="materialDesign:HintAssist.Background" Value="{StaticResource ForegroundAppColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputTextArea" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="Margin" Value="10"/>

        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1.1"/>
        <Setter Property="materialDesign:ValidationAssist.OnlyShowOnFocus" Value="True"/>
        <Setter Property="materialDesign:ValidationAssist.UsePopup" Value="True"/>
        <Setter Property="materialDesign:ValidationAssist.Background" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                <Setter Property="materialDesign:HintAssist.Background" Value="{StaticResource ForegroundAppColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputComboBox" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="10"/>

        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1.1"/>
        <Setter Property="materialDesign:ValidationAssist.OnlyShowOnFocus" Value="True"/>
        <Setter Property="materialDesign:ValidationAssist.UsePopup" Value="False"/>
        <Setter Property="materialDesign:ValidationAssist.Background" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                <Setter Property="materialDesign:HintAssist.Background" Value="{StaticResource ForegroundAppColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputDatePicker" TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignOutlinedDatePicker}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="10"/>

        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="{StaticResource AppColor}"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1.1"/>
        <Setter Property="materialDesign:ValidationAssist.OnlyShowOnFocus" Value="True"/>
        <Setter Property="materialDesign:ValidationAssist.UsePopup" Value="False"/>
        <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />

        <Style.Resources>
            <SolidColorBrush x:Key="MaterialDesignPaper" Color="#fff"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource AppColorVersion2}"/>
        </Style.Resources>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="False">
                <Setter Property="materialDesign:DatePickerAssist.OutlinedBorderInactiveThickness" Value="1"/>
                <Setter Property="materialDesign:DatePickerAssist.OutlinedBorderActiveThickness" Value="1"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="materialDesign:DatePickerAssist.OutlinedBorderInactiveThickness" Value="2"/>
                <Setter Property="materialDesign:DatePickerAssist.OutlinedBorderActiveThickness" Value="2"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="CircularProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource AppColor}"/>
    </Style>

    <Style x:Key="CircularProgressBarCard" TargetType="materialDesign:Card" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="3, 0"/>
        <Setter Property="Width" Value="80"/>
    </Style>

    <Style x:Key="SaveCancelButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AppColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Margin" Value="20 4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondAppColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisableButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileDialogButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AppColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="IsEnabled" Value="{Binding ProcessStarted, Converter={StaticResource InvertBooleanConverter}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondAppColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisableButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseDialogButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Close}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundAppColor}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{StaticResource ForegroundAppColor}"/>
    </Style>

    <!--#endregion-->

</ResourceDictionary>